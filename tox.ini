# Tox (http://tox.testrun.org/) is a tool for running tests in multiple virtualenvs.
# This configuration file will run the test suite on all supported Python versions.
# To use it, "pip install tox" and then run "tox" from this directory.

[tox]
envlist =
# Basic configurations: Run the tests for each python version.
    py{311}-prod

# Build and test the docs with sphinx.
    docs

# Run the linters.
    lint

# Pre distribution checks for the package
    twine
requires =
    setuptools
    tox-conda
skip_missing_interpreters = False

[testenv]
conda_env = {toxinidir}/conda/environment.yml
deps =
    pytest>=7.2.0
    pytest-cov>=4.0.0
    mock>=5.0.0
    moto[all]>=5.0.0
    pytest-asyncio>=0.23.8
setenv =
# IMAGE INTAKE
    AWS_DEFAULT_REGION=us-west-2
    OUTPUT_BUCKET=test-bucket
    OUTPUT_TOPIC=test-topic
# MOTO/BOTO
    AWS_ACCESS_KEY_ID=testing
    AWS_SECRET_ACCESS_KEY=testing
    AWS_SECURITY_TOKEN=testing
    AWS_SESSION_TOKEN=testing

    S3_URI=s3://test-bucket/manifest.json
    S3_INPUT_PATH=./test/data
    S3_OUTPUT_PATH=./test/data
    S3_OUTPUT_BUCKET=test-bucket
    STAC_ENDPOINT=https://test-stac-endpoint.com
    COLLECTION_ID=test-collection
    THREAD_WORKERS=4
    ES_PORT=443


# {posargs} can be passed in by additional arguments specified when invoking tox.
# Can be used to specify which tests to run, e.g.: tox -- -s
commands =
    pytest --durations=10 --cov-config .coveragerc --cov aws.osml.data_intake --cov-report term-missing {posargs}
    {env:IGNORE_COVERAGE:} coverage html --rcfile .coveragerc

[testenv:twine]
conda_env =
deps =
    twine>=1.12.0
commands =
    python setup.py sdist
    twine check dist/*.tar.gz

[testenv:lint]
skip_install = true
conda_env =
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure

[testenv:docs]
changedir = doc
deps =
    sphinx>=6.2.1
    sphinx-rtd-theme>=1.2.2
    sphinx-autoapi>=2.1.1
    stac_fastapi.opensearch==2.4.1
commands = sphinx-build -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
